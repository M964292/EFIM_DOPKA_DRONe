import random
import time


class FPVQuizGame:
    def __init__(self):
        self.score = 0
        self.questions_answered = 0
        self.components_learned = set()
        self.transfer_code = ""

        # –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ FPV –¥—Ä–æ–Ω–æ–≤ (—Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è)
        self.components = {
            "–§—Ä–µ–π–º (—Ä–∞–º–∞)": {
                "description": '–û—Å–Ω–æ–≤–∞ –¥—Ä–æ–Ω–∞, –∫ –∫–æ—Ç–æ—Ä–æ–π –∫—Ä–µ–ø—è—Ç—Å—è –≤—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã. –ë—ã–≤–∞—é—Ç —Ä–∞–∑–Ω—ã—Ö —Ä–∞–∑–º–µ—Ä–æ–≤ (3", 5" –∏ —Ç.–¥.)',
                "image": """
          ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
          ‚îÇ ‚îÇ
          ‚îÇ X ‚îÇ
          ‚îÇ ‚îÇ
          ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
        –ö–∞—Ä–±–æ–Ω–æ–≤–∞—è —Ä–∞–º–∞
                """,
                "function": "–°–ª—É–∂–∏—Ç –æ—Å–Ω–æ–≤–æ–π –¥–ª—è –∫—Ä–µ–ø–ª–µ–Ω–∏—è –≤—Å–µ—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –¥—Ä–æ–Ω–∞. –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç –µ–≥–æ —Ä–∞–∑–º–µ—Ä, –ø—Ä–æ—á–Ω–æ—Å—Ç—å –∏ –∞—ç—Ä–æ–¥–∏–Ω–∞–º–∏–∫—É.",
                "facts": [
                    "–ú–∞—Ç–µ—Ä–∏–∞–ª: —É–≥–ª–µ—Ä–æ–¥–Ω–æ–µ –≤–æ–ª–æ–∫–Ω–æ (–∫–∞—Ä–±–æ–Ω)",
                    "–†–∞–∑–º–µ—Ä –∏–∑–º–µ—Ä—è–µ—Ç—Å—è –≤ –¥—é–π–º–∞—Ö –ø–æ –¥–∏–∞–≥–æ–Ω–∞–ª–∏",
                    "–§–æ—Ä–º–∞: X, H, –∫—Ä–µ—Å—Ç, –≥–∏–±—Ä–∏–¥",
                    "–í–µ—Å —Ä–∞–º—ã –≤–ª–∏—è–µ—Ç –Ω–∞ –º–∞–Ω–µ–≤—Ä–µ–Ω–Ω–æ—Å—Ç—å –¥—Ä–æ–Ω–∞",
                ],
            },
            "–ú–æ—Ç–æ—Ä": {
                "description": "–≠–ª–µ–∫—Ç—Ä–æ–¥–≤–∏–≥–∞—Ç–µ–ª—å, –∫–æ—Ç–æ—Ä—ã–π –≤—Ä–∞—â–∞–µ—Ç –ø—Ä–æ–ø–µ–ª–ª–µ—Ä—ã. –ò–∑–º–µ—Ä—è–µ—Ç—Å—è –≤ kV (–æ–±–æ—Ä–æ—Ç—ã –Ω–∞ –≤–æ–ª—å—Ç)",
                "image": """
          ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
          ‚îÇ üß≤üß≤üß≤ ‚îÇ
          ‚îÇ üß≤ üß≤ ‚îÇ
                  üß≤üß≤üß≤ ‚îÇ
          ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
          –ë–µ—Å–∫–æ–ª–ª–µ–∫—Ç–æ—Ä–Ω—ã–π –º–æ—Ç–æ—Ä
                """,
                "function": "–í—Ä–∞—â–∞–µ—Ç –ø—Ä–æ–ø–µ–ª–ª–µ—Ä—ã, —Å–æ–∑–¥–∞–≤–∞—è –ø–æ–¥—ä–µ–º–Ω—É—é —Å–∏–ª—É. –ß–µ–º –≤—ã—à–µ kV - —Ç–µ–º –≤—ã—à–µ —Å–∫–æ—Ä–æ—Å—Ç—å –≤—Ä–∞—â–µ–Ω–∏—è.",
                "facts": [
                    "–¢–∏–ø: –±–µ—Å–∫–æ–ª–ª–µ–∫—Ç–æ—Ä–Ω—ã–π (BLDC)",
                    "–ë—ã–≤–∞—é—Ç —Ä–∞–∑–Ω—ã—Ö —Ä–∞–∑–º–µ—Ä–æ–≤: 2207, 2306 –∏ —Ç.–¥.",
                    "–ß–µ–º –≤—ã—à–µ kV - —Ç–µ–º –≤—ã—à–µ —Å–∫–æ—Ä–æ—Å—Ç—å –≤—Ä–∞—â–µ–Ω–∏—è",
                    "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—é—Å–æ–≤ –≤–ª–∏—è–µ—Ç –Ω–∞ –ø–ª–∞–≤–Ω–æ—Å—Ç—å —Ä–∞–±–æ—Ç—ã",
                ],
            },
            "–ü—Ä–æ–ø–µ–ª–ª–µ—Ä (–ø—Ä–æ–ø)": {
                "description": "–õ–æ–ø–∞—Å—Ç–∏, —Å–æ–∑–¥–∞—é—â–∏–µ –ø–æ–¥—ä–µ–º–Ω—É—é —Å–∏–ª—É. –ò–º–µ—é—Ç —Ä–∞–∑–Ω—ã–π —à–∞–≥ –∏ –¥–∏–∞–º–µ—Ç—Ä",
                "image": """
           /\\
          / \\
         / \\
        /______\\
          –ü—Ä–æ–ø–µ–ª–ª–µ—Ä
                """,
                "function": "–°–æ–∑–¥–∞–µ—Ç –ø–æ–¥—ä–µ–º–Ω—É—é —Å–∏–ª—É –ø—Ä–∏ –≤—Ä–∞—â–µ–Ω–∏–∏. –†–∞–∑–º–µ—Ä –∏ —Ñ–æ—Ä–º–∞ –≤–ª–∏—è—é—Ç –Ω–∞ —Ç—è–≥—É –∏ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø–æ–ª–µ—Ç–∞.",
                "facts": [
                    "–ú–∞—Ç–µ—Ä–∏–∞–ª: –ø–ª–∞—Å—Ç–∏–∫, –Ω–µ–π–ª–æ–Ω, –∫–∞—Ä–±–æ–Ω",
                    '–ú–∞—Ä–∫–∏—Ä–æ–≤–∫–∞: 5x4.3 (5" –¥–∏–∞–º–µ—Ç—Ä, 4.3" —à–∞–≥)',
                    "–ë—ã–≤–∞—é—Ç 2, 3, 4, 5 –∏ –±–æ–ª–µ–µ –ª–æ–ø–∞—Å—Ç–µ–π",
                    "–ë–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∫–∞ –ø—Ä–æ–ø–µ–ª–ª–µ—Ä–æ–≤ –≤–∞–∂–Ω–∞ –¥–ª—è –≤–∏–±—Ä–∞—Ü–∏–π",
                ],
            },
            "–†–µ–≥—É–ª—è—Ç–æ—Ä —Ö–æ–¥–∞ (ESC)": {
                "description": "–£–ø—Ä–∞–≤–ª—è–µ—Ç —Å–∫–æ—Ä–æ—Å—Ç—å—é –º–æ—Ç–æ—Ä–æ–≤. –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç —Å–∏–≥–Ω–∞–ª —Å –ø–æ–ª–µ—Ç–Ω–æ–≥–æ –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞",
                "image": """
          ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
          ‚îÇ ESC ‚îÇ
          ‚îÇ ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îê ‚îÇ
          ‚îÇ ‚îÇ ‚îÇ ‚îÇ
          ‚îî‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îò
          4-in-1 —Ä–µ–≥—É–ª—è—Ç–æ—Ä
                """,
                "function": "–£–ø—Ä–∞–≤–ª—è–µ—Ç —Å–∫–æ—Ä–æ—Å—Ç—å—é –≤—Ä–∞—â–µ–Ω–∏—è –º–æ—Ç–æ—Ä–æ–≤ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å–∏–≥–Ω–∞–ª–æ–≤ —Å –ø–æ–ª–µ—Ç–Ω–æ–≥–æ –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞.",
                "facts": [
                    "–ë—ã–≤–∞—é—Ç –æ—Ç–¥–µ–ª—å–Ω—ã–µ –∏ 4-in-1",
                    "–ò–∑–º–µ—Ä—è—é—Ç—Å—è –≤ –∞–º–ø–µ—Ä–∞—Ö (A): 30A, 45A, 60A",
                    "–ü—Ä–æ—à–∏–≤–∫–∞: BLHeli, Bluejay, KISS",
                    "–ß–∞—Å—Ç–æ—Ç–∞ –®–ò–ú –≤–ª–∏—è–µ—Ç –Ω–∞ –ø–ª–∞–≤–Ω–æ—Å—Ç—å —Ä–∞–±–æ—Ç—ã –º–æ—Ç–æ—Ä–æ–≤",
                ],
            },
            "–ü–æ–ª–µ—Ç–Ω—ã–π –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä (FC)": {
                "description": "–ú–æ–∑–≥ –¥—Ä–æ–Ω–∞. –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ —Å –¥–∞—Ç—á–∏–∫–æ–≤ –∏ —É–ø—Ä–∞–≤–ª—è–µ—Ç –º–æ—Ç–æ—Ä–∞–º–∏",
                "image": """
          ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
          ‚îÇ FC ‚îÇ
          ‚îÇ üéØ üéØ üéØ ‚îÇ
          ‚îÇ üéØ üéØ üéØ ‚îÇ
          ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
         –ü–æ–ª–µ—Ç–Ω—ã–π –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä
                """,
                "function": "–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ —Å –¥–∞—Ç—á–∏–∫–æ–≤ –∏ –ø—É–ª—å—Ç–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è, —Å—Ç–∞–±–∏–ª–∏–∑–∏—Ä—É–µ—Ç –¥—Ä–æ–Ω –≤ –ø–æ–ª–µ—Ç–µ.",
                "facts": [
                    "–ü—Ä–æ—à–∏–≤–∫–∞: Betaflight, Emuflight, KISS",
                    "–ò–º–µ–µ—Ç –≥–∏—Ä–æ—Å–∫–æ–ø –∏ –∞–∫—Å–µ–ª–µ—Ä–æ–º–µ—Ç—Ä",
                    "–†–∞–∑—ä–µ–º—ã: UART, I2C, PWM",
                    "–ß–∞—Å—Ç–æ—Ç–∞ –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–∞ –≤–ª–∏—è–µ—Ç –Ω–∞ —Å–∫–æ—Ä–æ—Å—Ç—å —Ä–µ–∞–∫—Ü–∏–∏",
                ],
            },
            "–ö–∞–º–µ—Ä–∞ FPV": {
                "description": "–ü–µ—Ä–µ–¥–∞–µ—Ç –≤–∏–¥–µ–æ —Å –¥—Ä–æ–Ω–∞ –Ω–∞ —à–ª–µ–º. –ò–º–µ–µ—Ç —à–∏—Ä–æ–∫–∏–π —É–≥–æ–ª –æ–±–∑–æ—Ä–∞",
                "image": """
          ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
          ‚îÇ ___ ‚îÇ
          ‚îÇ / \\ ‚îÇ
          ‚îÇ \\___/ ‚îÇ
          ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
          FPV –∫–∞–º–µ—Ä–∞
                """,
                "function": "–ü–µ—Ä–µ–¥–∞–µ—Ç –≤–∏–¥–µ–æ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞ FPV —à–ª–µ–º –ø–∏–ª–æ—Ç–∞, —Å–æ–∑–¥–∞–≤–∞—è —ç—Ñ—Ñ–µ–∫—Ç –ø–æ–ª–µ—Ç–∞ –æ—Ç –ø–µ—Ä–≤–æ–≥–æ –ª–∏—Ü–∞.",
                "facts": [
                    "–†–∞–∑—Ä–µ—à–µ–Ω–∏–µ: TVL (–∞–Ω–∞–ª–æ–≥) –∏–ª–∏ —Ü–∏—Ñ—Ä–æ–≤–æ–µ",
                    "–£–≥–æ–ª –æ–±–∑–æ—Ä–∞: 120-180 –≥—Ä–∞–¥—É—Å–æ–≤",
                    "–§–æ—Ä–º-—Ñ–∞–∫—Ç–æ—Ä: Micro, Nano, Full-size",
                    "–°–µ–Ω—Å–æ—Ä: CCD –∏–ª–∏ CMOS",
                ],
            },
            "–í–∏–¥–µ–æ–ø–µ—Ä–µ–¥–∞—Ç—á–∏–∫ (VTX)": {
                "description": "–ü–µ—Ä–µ–¥–∞–µ—Ç –≤–∏–¥–µ–æ —Å–∏–≥–Ω–∞–ª —Å –∫–∞–º–µ—Ä—ã –Ω–∞ —à–ª–µ–º –ø–∏–ª–æ—Ç–∞",
                "image": """
          ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
          ‚îÇ VTX ‚îÇ
          ‚îÇ üì° ‚îÇ
          ‚îÇ ‚ö°‚ö°‚ö°‚ö° ‚îÇ
          ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
         –í–∏–¥–µ–æ–ø–µ—Ä–µ–¥–∞—Ç—á–∏–∫
                """,
                "function": "–ü–µ—Ä–µ–¥–∞–µ—Ç –≤–∏–¥–µ–æ —Å–∏–≥–Ω–∞–ª —Å –∫–∞–º–µ—Ä—ã –Ω–∞ FPV —à–ª–µ–º –Ω–∞ —á–∞—Å—Ç–æ—Ç–µ 5.8GHz.",
                "facts": [
                    "–ú–æ—â–Ω–æ—Å—Ç—å: 25mW, 200mW, 800mW, 1W+",
                    "–ß–∞—Å—Ç–æ—Ç—ã: 5.8GHz –∫–∞–Ω–∞–ª—ã",
                    "–ü—Ä–æ—Ç–æ–∫–æ–ª—ã: Analog, HDZero, Walksnail, DJI",
                    "–ê–Ω—Ç–µ–Ω–Ω—ã: –ª–∏–Ω–µ–π–Ω–∞—è, –∫—Ä—É–≥–æ–≤–∞—è –ø–æ–ª—è—Ä–∏–∑–∞—Ü–∏—è",
                ],
            },
            "–ê–∫–∫—É–º—É–ª—è—Ç–æ—Ä (LiPo)": {
                "description": "–õ–∏—Ç–∏–π-–ø–æ–ª–∏–º–µ—Ä–Ω—ã–π –∞–∫–∫—É–º—É–ª—è—Ç–æ—Ä, –ø–∏—Ç–∞—é—â–∏–π –¥—Ä–æ–Ω",
                "image": """
          ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
          ‚îÇ LiPo ‚îÇ
          ‚îÇ ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ‚îÇ
          ‚îÇ ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ‚îÇ
          ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
          4S 1500mAh
                """,
                "function": "–û–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –ø–∏—Ç–∞–Ω–∏–µ –≤—Å–µ—Ö —Å–∏—Å—Ç–µ–º –¥—Ä–æ–Ω–∞. –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç –≤—Ä–µ–º—è –ø–æ–ª–µ—Ç–∞ –∏ –º–æ—â–Ω–æ—Å—Ç—å.",
                "facts": [
                    "–ù–∞–ø—Ä—è–∂–µ–Ω–∏–µ: 1S, 2S, 3S, 4S, 6S (1S=3.7V)",
                    "–ï–º–∫–æ—Å—Ç—å: mAh (–º–∏–ª–ª–∏–∞–º–ø–µ—Ä-—á–∞—Å—ã)",
                    "–†–∞–∑—Ä—è–¥: C-—Ä–µ–π—Ç–∏–Ω–≥ (50C, 100C, 150C)",
                    "–ë–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∫–∞ —è—á–µ–µ–∫ –≤–∞–∂–Ω–∞ –¥–ª—è –¥–æ–ª–≥–æ–≤–µ—á–Ω–æ—Å—Ç–∏",
                ],
            },
            "–ü—Ä–∏–µ–º–Ω–∏–∫ (RX)": {
                "description": "–ü–æ–ª—É—á–∞–µ—Ç —Å–∏–≥–Ω–∞–ª —Å –ø—É–ª—å—Ç–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏ –ø–µ—Ä–µ–¥–∞–µ—Ç –Ω–∞ –ø–æ–ª–µ—Ç–Ω—ã–π –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä",
                "image": """
          ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
          ‚îÇ RX ‚îÇ
          ‚îÇ üì∂ ‚îÇ
          ‚îÇ ‚ö° ‚îÇ
          ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
          –ü—Ä–∏–µ–º–Ω–∏–∫ 2.4GHz
                """,
                "function": "–ü—Ä–∏–Ω–∏–º–∞–µ—Ç –∫–æ–º–∞–Ω–¥—ã —Å –ø—É–ª—å—Ç–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏ –ø–µ—Ä–µ–¥–∞–µ—Ç –∏—Ö –Ω–∞ –ø–æ–ª–µ—Ç–Ω—ã–π –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä.",
                "facts": [
                    "–ü—Ä–æ—Ç–æ–∫–æ–ª—ã: FrSky, Crossfire, ELRS, TBS",
                    "–ß–∞—Å—Ç–æ—Ç—ã: 2.4GHz, 900MHz, 5.8GHz",
                    "–ê–Ω—Ç–µ–Ω–Ω—ã: –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ, –≤–Ω–µ—à–Ω–∏–µ, —Ä–∞–∑–Ω–æ–ø–æ–ª—è—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–µ",
                    "–ó–∞–¥–µ—Ä–∂–∫–∞ —Å–∏–≥–Ω–∞–ª–∞ –≤–ª–∏—è–µ—Ç –Ω–∞ –æ—Ç–∑—ã–≤—á–∏–≤–æ—Å—Ç—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è",
                ],
            },
            "–ê–Ω—Ç–µ–Ω–Ω–∞": {
                "description": "–ü–µ—Ä–µ–¥–∞–µ—Ç –∏ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Å–∏–≥–Ω–∞–ª –º–µ–∂–¥—É –¥—Ä–æ–Ω–æ–º –∏ –ø—É–ª—å—Ç–æ–º/—à–ª–µ–º–æ–º",
                "image": """
            /\\
           / \\
          / \\
         /------\\
          –ê–Ω—Ç–µ–Ω–Ω–∞
                """,
                "function": "–£—Å–∏–ª–∏–≤–∞–µ—Ç –∏ –Ω–∞–ø—Ä–∞–≤–ª—è–µ—Ç —Ä–∞–¥–∏–æ—Å–∏–≥–Ω–∞–ª –¥–ª—è –ª—É—á—à–µ–≥–æ –ø—Ä–∏–µ–º–∞ –∏ –ø–µ—Ä–µ–¥–∞—á–∏.",
                "facts": [
                    "–¢–∏–ø—ã: –ª–∏–Ω–µ–π–Ω–∞—è, –∫—Ä—É–≥–æ–≤–∞—è –ø–æ–ª—è—Ä–∏–∑–∞—Ü–∏—è",
                    "–ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç —É—Å–∏–ª–µ–Ω–∏—è –∏–∑–º–µ—Ä—è–µ—Ç—Å—è –≤ dBi",
                    "–î–∏–∞–≥—Ä–∞–º–º–∞ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ—Å—Ç–∏ –≤–ª–∏—è–µ—Ç –Ω–∞ –∑–æ–Ω—É –ø–æ–∫—Ä—ã—Ç–∏—è",
                    "–ü–æ–ª—è—Ä–∏–∑–∞—Ü–∏—è –≤–ª–∏—è–µ—Ç –Ω–∞ –∫–∞—á–µ—Å—Ç–≤–æ —Å–∏–≥–Ω–∞–ª–∞ –ø—Ä–∏ –Ω–∞–∫–ª–æ–Ω–∞—Ö",
                ],
            },
            "–ö–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä –ø–æ–ª–µ—Ç–∞ GPS": {
                "description": "–ú–æ–¥—É–ª—å GPS –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —É–¥–µ—Ä–∂–∞–Ω–∏—è –ø–æ–∑–∏—Ü–∏–∏",
                "image": """
          ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
          ‚îÇ GPS ‚îÇ
          ‚îÇ üõ∞Ô∏è ‚îÇ
          ‚îÇ ‚ö°‚ö° ‚îÇ
          ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
          GPS –º–æ–¥—É–ª—å
                """,
                "function": "–û–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç —Ç–æ—á–Ω–æ–µ –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –¥—Ä–æ–Ω–∞ –≤ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ, –ø–æ–∑–≤–æ–ª—è–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∞–≤—Ç–æ–Ω–æ–º–Ω—ã–µ —Ä–µ–∂–∏–º—ã.",
                "facts": [
                    "–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç GPS, GLONASS, Galileo",
                    "–¢–æ—á–Ω–æ—Å—Ç—å –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è: 1-2 –º–µ—Ç—Ä–∞",
                    "–ü–æ–∑–≤–æ–ª—è–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å Return-to-Home",
                    "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ø—É—Ç–Ω–∏–∫–æ–≤ –≤–ª–∏—è–µ—Ç –Ω–∞ —Ç–æ—á–Ω–æ—Å—Ç—å",
                ],
            },
        }

        # –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –º–æ–¥–µ–ª–∏ –¥—Ä–æ–Ω–æ–≤ (—Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫)
        self.drones = {
            "DJI FPV": {
                "type": "–ì–æ—Ç–æ–≤—ã–π –¥—Ä–æ–Ω",
                "description": "–ì–æ—Ç–æ–≤—ã–π FPV –¥—Ä–æ–Ω –æ—Ç DJI —Å —Ü–∏—Ñ—Ä–æ–≤–æ–π —Å–∏—Å—Ç–µ–º–æ–π",
                "features": [
                    "4K –∫–∞–º–µ—Ä–∞",
                    "–¶–∏—Ñ—Ä–æ–≤–∞—è FPV —Å–∏—Å—Ç–µ–º–∞",
                    "GPS",
                    "–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç—ã –ø–æ–ª–µ—Ç–∞",
                ],
                "image": """
              ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
              ‚îÇ ___ ‚îÇ
              ‚îÇ / \\ ‚îÇ
              ‚îÇ \\___/ ‚îÇ
              ‚îÇ / | | \\ ‚îÇ
              ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
                DJI FPV
                """,
                "function": "–ì–æ—Ç–æ–≤—ã–π –∫ –ø–æ–ª–µ—Ç–∞–º –¥—Ä–æ–Ω —Å —Ü–∏—Ñ—Ä–æ–≤–æ–π FPV —Å–∏—Å—Ç–µ–º–æ–π, –æ—Ç–ª–∏—á–Ω–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö.",
            },
            "iFlight Nazgul5": {
                "type": '–ö–≤–∞–¥—Ä–æ–∫–æ–ø—Ç–µ—Ä 5"',
                "description": "–ü–æ–ø—É–ª—è—Ä–Ω—ã–π BNF (Bind-N-Fly) –¥—Ä–æ–Ω –¥–ª—è –≥–æ–Ω–æ–∫",
                "features": [
                    "–ö–∞—Ä–±–æ–Ω–æ–≤–∞—è —Ä–∞–º–∞",
                    "–ë–µ—Å–∫–æ–ª–ª–µ–∫—Ç–æ—Ä–Ω—ã–µ –º–æ—Ç–æ—Ä—ã",
                    "–ê–Ω–∞–ª–æ–≥–æ–≤–∞—è FPV —Å–∏—Å—Ç–µ–º–∞",
                ],
                "image": """
              ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
              ‚îÇ X ‚îÇ
              ‚îÇ / \\ ‚îÇ
              ‚îÇ \\___/ ‚îÇ
              ‚îÇ / | | \\ ‚îÇ
              ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
              iFlight Nazgul5
                """,
                "function": "–î—Ä–æ–Ω –¥–ª—è –≥–æ–Ω–æ–∫ —Å –æ—Ç–ª–∏—á–Ω—ã–º —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ–º —Ü–µ–Ω—ã –∏ –∫–∞—á–µ—Å—Ç–≤–∞, —Ç—Ä–µ–±—É–µ—Ç –æ—Ç–¥–µ–ª—å–Ω–æ–π –ø–æ–∫—É–ø–∫–∏ –ø—É–ª—å—Ç–∞.",
            },
            "Tiny Whoop": {
                "type": "–ú–∏–Ω–∏ –¥—Ä–æ–Ω",
                "description": "–ú–∞–ª–µ–Ω—å–∫–∏–π –¥—Ä–æ–Ω –¥–ª—è –ø–æ–ª–µ—Ç–æ–≤ –≤ –ø–æ–º–µ—â–µ–Ω–∏–∏",
                "features": ["–ó–∞—â–∏—Ç–Ω—ã–π –¥—É–≥", "–ú–∞–ª–µ–Ω—å–∫–∏–π —Ä–∞–∑–º–µ—Ä", "–ë–µ–∑–æ–ø–∞—Å–µ–Ω –¥–ª—è –¥–æ–º–∞"],
                "image": """
              ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
              ‚îÇ ()() ‚îÇ
              ‚îÇ / \\ ‚îÇ
              ‚îÇ \\____/ ‚îÇ
              ‚îÇ ‚îÇ
              ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
              Tiny Whoop
                """,
                "function": "–ú–∏–Ω–∏–∞—Ç—é—Ä–Ω—ã–π –¥—Ä–æ–Ω –¥–ª—è –ø–æ–ª–µ—Ç–æ–≤ –≤ –ø–æ–º–µ—â–µ–Ω–∏–∏, –±–µ–∑–æ–ø–∞—Å–µ–Ω –±–ª–∞–≥–æ–¥–∞—Ä—è –∑–∞—â–∏—Ç–Ω–æ–º—É –¥—É–≥—É.",
            },
            "Cinewhoop": {
                "type": "–ö–∏–Ω–æ—Å—ä–µ–º–æ—á–Ω—ã–π –¥—Ä–æ–Ω",
                "description": "–î—Ä–æ–Ω –¥–ª—è –∞—ç—Ä–æ—Å—ä–µ–º–∫–∏ —Å –∑–∞—â–∏—â–µ–Ω–Ω—ã–º–∏ –ø—Ä–æ–ø–µ–ª–ª–µ—Ä–∞–º–∏",
                "features": ["–ó–∞—â–∏—Ç–Ω—ã–µ –∫–æ–ª—å—Ü–∞", "–ü–ª–∞–≤–Ω—ã–π –ø–æ–ª–µ—Ç", "–ö–∞–º–µ—Ä–∞ –Ω–∞ –ø–æ–¥–≤–µ—Å–µ"],
                "image": """
              ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
              ‚îÇ [][] ‚îÇ
              ‚îÇ / \\ ‚îÇ
              ‚îÇ \\____/ ‚îÇ
              ‚îÇ [][] ‚îÇ
              ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
                Cinewhoop
                """,
                "function": "–°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –¥—Ä–æ–Ω –¥–ª—è –≤–∏–¥–µ–æ—Å—ä–µ–º–∫–∏ —Å –∑–∞—â–∏—Ç–æ–π –ø—Ä–æ–ø–µ–ª–ª–µ—Ä–æ–≤ –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏.",
            },
            "Long Range Drone": {
                "type": "–î—Ä–æ–Ω –¥–∞–ª—å–Ω–µ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è",
                "description": "–î—Ä–æ–Ω –¥–ª—è –ø–æ–ª–µ—Ç–æ–≤ –Ω–∞ –±–æ–ª—å—à–∏–µ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏—è",
                "features": ["–ë–æ–ª—å—à–∏–µ –ø—Ä–æ–ø–µ–ª–ª–µ—Ä—ã", "–≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–µ –º–æ—Ç–æ—Ä—ã", "–°–∏—Å—Ç–µ–º–∞ GPS"],
                "image": """
              ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
              ‚îÇ ___ ‚îÇ
              ‚îÇ / \\ ‚îÇ
              ‚îÇ \\___/ ‚îÇ
              ‚îÇ / \\ ‚îÇ
              ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
              Long Range
                """,
                "function": "–î—Ä–æ–Ω –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –¥–ª—è –ø–æ–ª–µ—Ç–æ–≤ –Ω–∞ –±–æ–ª—å—à–∏–µ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏—è —Å —É–≤–µ–ª–∏—á–µ–Ω–Ω—ã–º –≤—Ä–µ–º–µ–Ω–µ–º –ø–æ–ª–µ—Ç–∞.",
            },
        }

        # –ú–æ–¥–µ–ª–∏ –ø—É–ª—å—Ç–æ–≤ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
        self.controllers = {
            "RadioMaster TX12": {
                "description": "–ë—é–¥–∂–µ—Ç–Ω—ã–π –ø—É–ª—å—Ç —Å —Ü–≤–µ—Ç–Ω—ã–º –¥–∏—Å–ø–ª–µ–µ–º",
                "price_range": "$$",
                "features": ["Color LCD", "4-in-1 module", "EdgeTX"],
                "views": {
                    "front": """
        ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
        ‚îÇ RADIOMASTER TX12 ‚îÇ
        ‚îÇ ‚îÇ
        ‚îÇ ( ) ( ) ‚îÇ
        ‚îÇ / \\ / \\ ‚îÇ
        ‚îÇ ‚îÇ
        ‚îÇ ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê ‚îÇ
        ‚îÇ ‚îÇ ‚îÇ ‚îÇ
        ‚îÇ ‚îÇ LCD 2.4" ‚îÇ ‚îÇ
        ‚îÇ ‚îÇ ‚îÇ ‚îÇ
        ‚îÇ ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò ‚îÇ
        ‚îÇ ‚îÇ
        ‚îÇ [SWA] [SWB] [SWC] [SWD]‚îÇ
        ‚îÇ [SWE] [SWF] [SWG] [SWH]‚îÇ
        ‚îÇ ‚îÇ
        ‚îÇ [ ] [ ] [ ] [ ] [ ] ‚îÇ
        ‚îÇ ‚îÇ
        ‚îÇ [ ] [ ] ‚îÇ
        ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
                    """,
                    "side": """
              ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
              ‚îÇ ‚îÇ
              ‚îÇ ( ) ‚îÇ
              ‚îÇ / \\ ‚îÇ
              ‚îÇ ‚îÇ
              ‚îÇ LCD ‚îÇ
              ‚îÇ ‚îÇ
              ‚îÇ[SWA] ‚îÇ
              ‚îÇ ‚îÇ
              ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
           –ë–æ–∫–æ–≤–æ–π –≤–∏–¥ TX12
                    """,
                },
            },
            "TBS Tango 2": {
                "description": "–ö–æ–º–ø–∞–∫—Ç–Ω—ã–π –∏–≥—Ä–æ–≤–æ–π –ø—É–ª—å—Ç –¥–ª—è FPV",
                "price_range": "$$$",
                "features": ["Compact", "Hall gimbals", "Crossfire"],
                "views": {
                    "front": """
          ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
          ‚îÇ TBS TANGO 2 ‚îÇ
          ‚îÇ ‚îÇ
          ‚îÇ ( ) ( ) ‚îÇ
          ‚îÇ / \\ / \\ ‚îÇ
          ‚îÇ ‚îÇ
          ‚îÇ ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê ‚îÇ
          ‚îÇ ‚îÇ LCD ‚îÇ ‚îÇ
          ‚îÇ ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò ‚îÇ
          ‚îÇ ‚îÇ
          ‚îÇ [ ] [ ] [ ] ‚îÇ
          ‚îÇ ‚îÇ
          ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
                    """,
                    "side": """
              ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
              ‚îÇ ‚îÇ
              ‚îÇ ( ) ‚îÇ
              ‚îÇ / \\ ‚îÇ
              ‚îÇ ‚îÇ
              ‚îÇ LCD ‚îÇ
              ‚îÇ ‚îÇ
              ‚îÇ [ ] ‚îÇ
              ‚îÇ ‚îÇ
              ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
           –ë–æ–∫–æ–≤–æ–π –≤–∏–¥ Tango 2
                    """,
                },
            },
            "DJI FPV Remote Controller 2": {
                "description": "–ü—É–ª—å—Ç –¥–ª—è DJI FPV —Å–∏—Å—Ç–µ–º—ã",
                "price_range": "$$$$",
                "features": ["Low latency", "Ergonomic", "OcuSync"],
                "views": {
                    "front": """
          ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
          ‚îÇ DJI FPV RC2 ‚îÇ
          ‚îÇ ‚îÇ
          ‚îÇ ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê ‚îÇ
          ‚îÇ ‚îÇ ‚îÇ ‚îÇ
          ‚îÇ ‚îÇ LCD ‚îÇ ‚îÇ
          ‚îÇ ‚îÇ ‚îÇ ‚îÇ
          ‚îÇ ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò ‚îÇ
          ‚îÇ ‚îÇ
          ‚îÇ ( ) ( ) ‚îÇ
          ‚îÇ / \\ / \\ ‚îÇ
          ‚îÇ ‚îÇ
          ‚îÇ [ ] [ ] [ ] ‚îÇ
          ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
                    """,
                    "side": """
              ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
              ‚îÇ ‚îÇ
              ‚îÇ ( ) ‚îÇ
              ‚îÇ / \\ ‚îÇ
              ‚îÇ ‚îÇ
              ‚îÇ LCD ‚îÇ
              ‚îÇ ‚îÇ
              ‚îÇ [ ] ‚îÇ
              ‚îÇ ‚îÇ
              ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
           –ë–æ–∫–æ–≤–æ–π –≤–∏–¥ DJI RC2
                    """,
                },
            },
        }

        # –ú–æ–¥–µ–ª–∏ FPV —à–ª–µ–º–æ–≤
        self.goggles = {
            "DJI FPV Goggles 2": {
                "description": "–¶–∏—Ñ—Ä–æ–≤–æ–π —à–ª–µ–º –æ—Ç DJI",
                "price_range": "$$$$",
                "features": ["Digital HD", "Low latency", "OcuSync"],
                "views": {
                    "front": """
          ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
          ‚îÇ DJI GOGGLES 2 ‚îÇ
          ‚îÇ ####### ##### ‚îÇ
          ‚îÇ # ## #‚îÇ
          ‚îÇ # # üñ• #‚îÇ
          ‚îÇ # ## #‚îÇ
          ‚îÇ ####### ##### ‚îÇ
          ‚îÇ ‚îÇ ‚îÇ ‚îÇ
          ‚îÇ ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò ‚îÇ
          ‚îÇ [ANT] [PWR] [‚öô] ‚îÇ
          ‚îÇ [CH-] [CH+] ‚îÇ
          ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
                    """,
                    "side": """
          ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
          ‚îÇ _____ ‚îÇ
          ‚îÇ / \\ ‚îÇ
          ‚îÇ / üñ• \\ ‚îÇ
          ‚îÇ \\ / ‚îÇ
          ‚îÇ \\_____/ ‚îÇ
          ‚îÇ ‚îÇ
          ‚îÇ [–†–ï–ì–£–õ–ò–†] ‚îÇ
          ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
          –ë–æ–∫–æ–≤–æ–π –≤–∏–¥ DJI Goggles 2
                    """,
                },
            },
            "FatShark Dominator": {
                "description": "–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–æ–≥–æ–≤—ã–π —à–ª–µ–º",
                "price_range": "$$$",
                "features": ["Analog", "Modular", "Lightweight"],
                "views": {
                    "front": """
          ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
          ‚îÇ FATSHARK DOMIN. ‚îÇ
          ‚îÇ #### #### ‚îÇ
          ‚îÇ # # # # ‚îÇ
          ‚îÇ # # # # ‚îÇ
          ‚îÇ #### #### ‚îÇ
          ‚îÇ ‚îÇ ‚îÇ ‚îÇ
          ‚îÇ ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò ‚îÇ
          ‚îÇ [ ] [PWR] [‚öô] ‚îÇ
          ‚îÇ [CH-] [CH+] ‚îÇ
          ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
                    """,
                    "side": """
          ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
          ‚îÇ _____ ‚îÇ
          ‚îÇ / \\ ‚îÇ
          ‚îÇ / üëÅ \\ ‚îÇ
          ‚îÇ \\ / ‚îÇ
          ‚îÇ \\_____/ ‚îÇ
          ‚îÇ ‚îÇ
          ‚îÇ [–§–û–ö–£–°] ‚îÇ
          ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
          –ë–æ–∫–æ–≤–æ–π –≤–∏–¥ FatShark
                    """,
                },
            },
            "Skyzone Sky04X": {
                "description": "–®–ª–µ–º —Å OLED –¥–∏—Å–ø–ª–µ—è–º–∏",
                "price_range": "$$$$",
                "features": ["OLED", "Diversity", "HDMI"],
                "views": {
                    "front": """
          ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
          ‚îÇ SKYZONE SKY04X ‚îÇ
          ‚îÇ ##### ##### ‚îÇ
          ‚îÇ # ## # ‚îÇ
          ‚îÇ # # üñ• # ‚îÇ
          ‚îÇ # ## # ‚îÇ
          ‚îÇ ##### ##### ‚îÇ
          ‚îÇ ‚îÇ ‚îÇ ‚îÇ
          ‚îÇ ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò ‚îÇ
          ‚îÇ [ANT] [PWR] [‚öô] ‚îÇ
          ‚îÇ [CH-] [CH+] ‚îÇ
          ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
                    """,
                    "side": """
          ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
          ‚îÇ _____ ‚îÇ
          ‚îÇ / \\ ‚îÇ
          ‚îÇ / üñ• \\ ‚îÇ
          ‚îÇ \\ / ‚îÇ
          ‚îÇ \\_____/ ‚îÇ
          ‚îÇ ‚îÇ
          ‚îÇ [–î–ò–û–ü–¢–†] ‚îÇ
          ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
          –ë–æ–∫–æ–≤–æ–π –≤–∏–¥ Skyzone
                    """,
                },
            },
        }

    def show_menu(self):
        """–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∏–≥—Ä—ã"""
        while True:
            print("\n" + "=" * 50)
            print("üéØ FPV –î–†–û–ù–´: –í–ò–ö–¢–û–†–ò–ù–ê –ò –û–ë–£–ß–ï–ù–ò–ï üéØ")
            print("=" * 50)
            print("1 - –í–∏–∫—Ç–æ—Ä–∏–Ω–∞: –£–≥–∞–¥–∞–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç")
            print("2 - –í–∏–∫—Ç–æ—Ä–∏–Ω–∞: –£–≥–∞–¥–∞–π –¥—Ä–æ–Ω")
            print("3 - –û–±—É—á–∞–ª–∫–∞: –ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã FPV –¥—Ä–æ–Ω–∞")
            print("4 - –û—Å–º–æ—Ç—Ä–µ—Ç—å FPV –ø—É–ª—å—Ç—ã")
            print("5 - –û—Å–º–æ—Ç—Ä–µ—Ç—å FPV —à–ª–µ–º—ã")
            print("6 - –ü–µ—Ä–µ–¥–∞—á–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–∞ –¥—Ä—É–≥–æ–π —Ç–µ–ª–µ—Ñ–æ–Ω")
            print("7 - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞")
            print("0 - –í—ã–π—Ç–∏")
            print("=" * 50)

            choice = input("–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç (0-7): ").strip()

            if choice == "1":
                self.quiz_components()
            elif choice == "2":
                self.quiz_drones()
            elif choice == "3":
                self.learning_components()
            elif choice == "4":
                self.show_controllers()
            elif choice == "5":
                self.show_goggles_collection()
            elif choice == "6":
                self.data_transfer()
            elif choice == "7":
                self.show_stats()
            elif choice == "0":
                print("–°–ø–∞—Å–∏–±–æ –∑–∞ –∏–∑—É—á–µ–Ω–∏–µ FPV –¥—Ä–æ–Ω–æ–≤! üöÅ")
                break
            else:
                print("–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ü–∏—Ñ—Ä—ã 0-7.")

    def quiz_components(self):
        """–í–∏–∫—Ç–æ—Ä–∏–Ω–∞: —É–≥–∞–¥–∞–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –ø–æ –æ–ø–∏—Å–∞–Ω–∏—é —Å —É–ª—É—á—à–µ–Ω–Ω–æ–π —Ä–∞–Ω–¥–æ–º–∏–∑–∞—Ü–∏–µ–π"""
        print("\n" + "=" * 50)
        print("üß© –í–ò–ö–¢–û–†–ò–ù–ê: –£–ì–ê–î–ê–ô –ö–û–ú–ü–û–ù–ï–ù–¢ –î–†–û–ù–ê")
        print("=" * 50)

        components = list(self.components.keys())
        random.shuffle(components)

        # –°–ª—É—á–∞–π–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–æ–ø—Ä–æ—Å–æ–≤ –æ—Ç 3 –¥–æ 8
        num_questions = random.randint(3, min(8, len(components)))

        for i, component in enumerate(components[:num_questions], 1):
            print(f"\n–í–æ–ø—Ä–æ—Å {i}/{num_questions}")

            # –°–ª—É—á–∞–π–Ω—ã–π –≤—ã–±–æ—Ä —Ç–∏–ø–∞ –≤–æ–ø—Ä–æ—Å–∞
            question_type = random.choice(["description", "function", "fact"])

            if question_type == "description":
                description = self.components[component]["description"]
                print(f"–û–ü–ò–°–ê–ù–ò–ï: {description}")
            elif question_type == "function":
                function = self.components[component]["function"]
                print(f"–§–£–ù–ö–¶–ò–Ø: {function}")
            else:
                fact = random.choice(self.components[component]["facts"])
                print(f"–§–ê–ö–¢: {fact}")

            print("\n–í–∞—Ä–∏–∞–Ω—Ç—ã –æ—Ç–≤–µ—Ç–æ–≤:")

            # –í—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω—ã–µ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã + –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π
            options = [component]
            wrong_options = [c for c in components if c != component]
            random.shuffle(wrong_options)

            # –°–ª—É—á–∞–π–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –æ—Ç 3 –¥–æ 5
            num_options = random.randint(3, 5)
            options.extend(wrong_options[: num_options - 1])
            random.shuffle(options)

            for i, option in enumerate(options, 1):
                print(f"{i}. {option}")

            while True:
                try:
                    answer = int(input(f"\n–í–∞—à –æ—Ç–≤–µ—Ç (1-{num_options}): ").strip())
                    if 1 <= answer <= num_options:
                        break
                    else:
                        print(f"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ {num_options}")
                except ValueError:
                    print("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ")

            print("\n" + "=" * 40)
            if options[answer - 1] == component:
                print("‚úÖ –ü–†–ê–í–ò–õ–¨–ù–û! +10 –æ—á–∫–æ–≤")
                self.score += 10
                self.components_learned.add(component)
            else:
                print(f"‚ùå –ù–ï–ü–†–ê–í–ò–õ–¨–ù–û! –≠—Ç–æ –±—ã–ª: {component}")

            self.questions_answered += 1

            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ –∏ –µ–≥–æ —Ñ—É–Ω–∫—Ü–∏—é
            print(self.components[component]["image"])
            print(f"\n–§–£–ù–ö–¶–ò–Ø: {self.components[component]['function']}")

            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–ª—É—á–∞–π–Ω—ã–π –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π —Ñ–∞–∫—Ç
            fact = random.choice(self.components[component]["facts"])
            print(f"üí° –ò–ù–¢–ï–†–ï–°–ù–´–ô –§–ê–ö–¢: {fact}")

            print("=" * 40)

    def quiz_drones(self):
        """–í–∏–∫—Ç–æ—Ä–∏–Ω–∞: —É–≥–∞–¥–∞–π –¥—Ä–æ–Ω –ø–æ –æ–ø–∏—Å–∞–Ω–∏—é —Å —Ä–∞–Ω–¥–æ–º–∏–∑–∞—Ü–∏–µ–π"""
        print("\n" + "=" * 50)
        print("üöÅ –í–ò–ö–¢–û–†–ò–ù–ê: –£–ì–ê–î–ê–ô –î–†–û–ù")
        print("=" * 50)

        drones = list(self.drones.keys())
        random.shuffle(drones)

        num_questions = random.randint(2, min(4, len(drones)))

        for i, drone in enumerate(drones[:num_questions], 1):
            drone_info = self.drones[drone]
            print(f"\n–í–æ–ø—Ä–æ—Å {i}/{num_questions}")

            # –°–ª—É—á–∞–π–Ω—ã–π –≤—ã–±–æ—Ä —Ç–∏–ø–∞ –≤–æ–ø—Ä–æ—Å–∞
            question_type = random.choice(["type", "features", "description"])

            if question_type == "type":
                print(f"–¢–ò–ü –î–†–û–ù–ê: {drone_info['type']}")
            elif question_type == "features":
                features = random.sample(
                    drone_info["features"], min(2, len(drone_info["features"]))
                )
                print(f"–û–°–û–ë–ï–ù–ù–û–°–¢–ò: {', '.join(features)}")
            else:
                description = drone_info["description"]
                print(f"–û–ü–ò–°–ê–ù–ò–ï: {description}")

            options = [drone]
            wrong_options = [d for d in drones if d != drone]
            random.shuffle(wrong_options)
            options.extend(wrong_options[:2])
            random.shuffle(options)

            print("\n–í–∞—Ä–∏–∞–Ω—Ç—ã –æ—Ç–≤–µ—Ç–æ–≤:")
            for i, option in enumerate(options, 1):
                print(f"{i}. {option}")

            while True:
                try:
                    answer = int(input("\n–í–∞—à –æ—Ç–≤–µ—Ç (1-3): ").strip())
                    if 1 <= answer <= 3:
                        break
                    else:
                        print("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 3")
                except ValueError:
                    print("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ")

            print("\n" + "=" * 30)
            if options[answer - 1] == drone:
                print("‚úÖ –ü–†–ê–í–ò–õ–¨–ù–û! +15 –æ—á–∫–æ–≤")
                self.score += 15
            else:
                print(f"‚ùå –ù–ï–ü–†–ê–í–ò–õ–¨–ù–û! –≠—Ç–æ –±—ã–ª: {drone}")

            self.questions_answered += 1

            print(drone_info["image"])
            print(f"\n–ù–ê–ó–ù–ê–ß–ï–ù–ò–ï: {drone_info['function']}")

            print("=" * 30)

    def learning_components(self):
        """–û–±—É—á–∞–ª–∫–∞ –ø–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º FPV –¥—Ä–æ–Ω–∞"""
        print("\n" + "=" * 50)
        print("üìö –û–ë–£–ß–ê–õ–ö–ê: –ö–û–ú–ü–û–ù–ï–ù–¢–´ FPV –î–†–û–ù–ê")
        print("=" * 50)

        components = list(self.components.keys())
        random.shuffle(components)  # –†–∞–Ω–¥–æ–º–Ω—ã–π –ø–æ—Ä—è–¥–æ–∫ –∏–∑—É—á–µ–Ω–∏—è

        while True:
            print("\n–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è:")
            for i, component in enumerate(components, 1):
                learned = "‚úÖ" if component in self.components_learned else " "
                print(f"{learned} {i}. {component}")
            print("0. –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é")

            try:
                choice = int(input("\n–í–∞—à –≤—ã–±–æ—Ä: ").strip())
                if choice == 0:
                    return
                elif 1 <= choice <= len(components):
                    component = components[choice - 1]
                    self.show_component_info(component)
                    self.components_learned.add(component)
                else:
                    print("–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä!")
            except ValueError:
                print("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ")

    def show_component_info(self, component):
        """–ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–µ"""
        info = self.components[component]

        print("\n" + "=" * 50)
        print(f"üîß {component.upper()}")
        print("=" * 50)
        print(info["image"])
        print(f"\nüìù –û–ü–ò–°–ê–ù–ò–ï: {info['description']}")
        print(f"\n‚öôÔ∏è –§–£–ù–ö–¶–ò–Ø: {info['function']}")
        print("\nüí° –ò–ù–¢–ï–†–ï–°–ù–´–ï –§–ê–ö–¢–´:")
        for fact in info["facts"]:
            print(f"‚Ä¢ {fact}")

        print("\n0 - –í–æ–∑–≤—Ä–∞—Ç –≤ –æ–±—É—á–∞–ª–∫—É")
        while True:
            cmd = input().strip()
            if cmd == "0":
                return

    def show_controllers(self):
        """–ü–æ–∫–∞–∑ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ FPV –ø—É–ª—å—Ç–æ–≤"""
        print("\n" + "=" * 50)
        print("üéÆ –ö–û–õ–õ–ï–ö–¶–ò–Ø FPV –ü–£–õ–¨–¢–û–í")
        print("=" * 50)

        controllers = list(self.controllers.keys())

        while True:
            print("\n–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–ª—å—Ç –¥–ª—è –æ—Å–º–æ—Ç—Ä–∞:")
            for i, controller in enumerate(controllers, 1):
                print(f"{i}. {controller}")
            print("0. –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é")

            try:
                choice = int(input("\n–í–∞—à –≤—ã–±–æ—Ä: ").strip())
                if choice == 0:
                    return
                elif 1 <= choice <= len(controllers):
                    controller = controllers[choice - 1]
                    self.show_controller_details(controller)
                else:
                    print("–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä!")
            except ValueError:
                print("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ")

    def show_controller_details(self, controller):
        """–ü–æ–∫–∞–∑–∞—Ç—å –¥–µ—Ç–∞–ª–∏ –ø—É–ª—å—Ç–∞"""
        info = self.controllers[controller]

        print("\n" + "=" * 50)
        print(f"üéÆ {controller.upper()}")
        print("=" * 50)
        print(f"üìã –û–ø–∏—Å–∞–Ω–∏–µ: {info['description']}")
        print(f"üí∞ –¶–µ–Ω–æ–≤–æ–π –¥–∏–∞–ø–∞–∑–æ–Ω: {info['price_range']}")
        print(f"‚≠ê –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏: {', '.join(info['features'])}")

        print("\n1. –í–∏–¥ —Å–ø–µ—Ä–µ–¥–∏:")
        print(info["views"]["front"])

        print("\n2. –í–∏–¥ —Å–±–æ–∫—É:")
        print(info["views"]["side"])

        print("\n0 - –í–æ–∑–≤—Ä–∞—Ç –∫ —Å–ø–∏—Å–∫—É –ø—É–ª—å—Ç–æ–≤")
        while True:
            cmd = input().strip()
            if cmd == "0":
                return

    def show_goggles_collection(self):
        """–ü–æ–∫–∞–∑ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ FPV —à–ª–µ–º–æ–≤"""
        print("\n" + "=" * 50)
        print("ü•Ω –ö–û–õ–õ–ï–ö–¶–ò–Ø FPV –®–õ–ï–ú–û–í")
        print("=" * 50)

        goggles_list = list(self.goggles.keys())

        while True:
            print("\n–í—ã–±–µ—Ä–∏—Ç–µ —à–ª–µ–º –¥–ª—è –æ—Å–º–æ—Ç—Ä–∞:")
            for i, goggle in enumerate(goggles_list, 1):
                print(f"{i}. {goggle}")
            print("0. –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é")

            try:
                choice = int(input("\n–í–∞—à –≤—ã–±–æ—Ä: ").strip())
                if choice == 0:
                    return
                elif 1 <= choice <= len(goggles_list):
                    goggle = goggles_list[choice - 1]
                    self.show_goggle_details(goggle)
                else:
                    print("–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä!")
            except ValueError:
                print("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ")

    def show_goggle_details(self, goggle):
        """–ü–æ–∫–∞–∑–∞—Ç—å –¥–µ—Ç–∞–ª–∏ —à–ª–µ–º–∞"""
        info = self.goggles[goggle]

        print("\n" + "=" * 50)
        print(f"ü•Ω {goggle.upper()}")
        print("=" * 50)
        print(f"üìã –û–ø–∏—Å–∞–Ω–∏–µ: {info['description']}")
        print(f"üí∞ –¶–µ–Ω–æ–≤–æ–π –¥–∏–∞–ø–∞–∑–æ–Ω: {info['price_range']}")
        print(f"‚≠ê –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏: {', '.join(info['features'])}")

        print("\n1. –í–∏–¥ —Å–ø–µ—Ä–µ–¥–∏:")
        print(info["views"]["front"])

        print("\n2. –í–∏–¥ —Å–±–æ–∫—É:")
        print(info["views"]["side"])

        print("\n0 - –í–æ–∑–≤—Ä–∞—Ç –∫ —Å–ø–∏—Å–∫—É —à–ª–µ–º–æ–≤")
        while True:
            cmd = input().strip()
            if cmd == "0":
                return

    def data_transfer(self):
        """–°–∏—Å—Ç–µ–º–∞ –ø–µ—Ä–µ–¥–∞—á–∏ –¥–∞–Ω–Ω—ã—Ö –Ω–∞ –¥—Ä—É–≥–æ–π —Ç–µ–ª–µ—Ñ–æ–Ω"""
        print("\n" + "=" * 50)
        print("üì° –ü–ï–†–ï–î–ê–ß–ê –î–ê–ù–ù–´–• –ù–ê –î–†–£–ì–û–ô –¢–ï–õ–ï–§–û–ù")
        print("=" * 50)

        if not self.components_learned:
            print("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –∏–∑—É—á–µ–Ω–Ω—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏!")
            print("–°–Ω–∞—á–∞–ª–∞ –∏–∑—É—á–∏—Ç–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –≤ –æ–±—É—á–∞–ª–∫–µ –∏–ª–∏ –≤–∏–∫—Ç–æ—Ä–∏–Ω–µ.")
            print("\n0 - –í–æ–∑–≤—Ä–∞—Ç –≤ –º–µ–Ω—é")
            input()
            return

        # –°–æ–∑–¥–∞–µ–º –∫–æ–¥ –ø–µ—Ä–µ–¥–∞—á–∏
        components_str = ",".join(sorted(self.components_learned))
        self.transfer_code = f"FPV{self.score:04d}{len(self.components_learned):02d}"

        print("‚úÖ –î–∞–Ω–Ω—ã–µ –≥–æ—Ç–æ–≤—ã –∫ –ø–µ—Ä–µ–¥–∞—á–µ!")
        print(f"üìä –í–∞—à —Å—á–µ—Ç: {self.score}")
        print(f"üìö –ò–∑—É—á–µ–Ω–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤: {len(self.components_learned)}")
        print(f"üî¢ –ö–æ–¥ –ø–µ—Ä–µ–¥–∞—á–∏: {self.transfer_code}")

        print("\n" + "=" * 30)
        print("üì≤ –ö–ê–ö –ü–ï–†–ï–î–ê–¢–¨ –î–ê–ù–ù–´–ï:")
        print("1. –ó–∞–ø–æ–º–Ω–∏—Ç–µ –∫–æ–¥ –ø–µ—Ä–µ–¥–∞—á–∏ –≤—ã—à–µ")
        print("2. –ù–∞ –¥—Ä—É–≥–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω–µ –∑–∞–ø—É—Å—Ç–∏—Ç–µ —ç—Ç—É –ø—Ä–æ–≥—Ä–∞–º–º—É")
        print("3. –í—ã–±–µ—Ä–∏—Ç–µ '–ü–µ—Ä–µ–¥–∞—á–∞ –¥–∞–Ω–Ω—ã—Ö' -> '–ü–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ'")
        print("4. –í–≤–µ–¥–∏—Ç–µ –∫–æ–¥ –ø–µ—Ä–µ–¥–∞—á–∏")
        print("=" * 30)

        print("\n1. –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –∫–æ–¥")
        print("2. –ü–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ –∫–æ–¥—É")
        print("0. –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é")

        choice = input("\n–í–∞—à –≤—ã–±–æ—Ä: ").strip()

        if choice == "1":
            # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –Ω–æ–≤—ã–π –∫–æ–¥
            new_code = (
                f"FPV{random.randint(1000, 9999)}{len(self.components_learned):02d}"
            )
            self.transfer_code = new_code
            print(f"üÜï –ù–æ–≤—ã–π –∫–æ–¥ —Å–æ–∑–¥–∞–Ω: {new_code}")
            print("–ü–µ—Ä–µ–¥–∞–π—Ç–µ —ç—Ç–æ—Ç –∫–æ–¥ –¥—Ä—É–≥—É!")
        elif choice == "2":
            self.receive_data()
        elif choice == "0":
            return

    def receive_data(self):
        """–ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ –∫–æ–¥—É"""
        print("\n" + "=" * 50)
        print("üì• –ü–û–õ–£–ß–ï–ù–ò–ï –î–ê–ù–ù–´–• –û–¢ –î–†–£–ì–û–ì–û –ò–ì–†–û–ö–ê")
        print("=" * 50)

        code = input("–í–≤–µ–¥–∏—Ç–µ –∫–æ–¥ –ø–µ—Ä–µ–¥–∞—á–∏: ").strip().upper()

        if len(code) != 9 or not code.startswith("FPV"):
            print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–æ–¥–∞!")
            return

        try:
            score = int(code[3:7])
            components_count = int(code[7:9])

            print(f"‚úÖ –î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω—ã!")
            print(f"üèÜ –°—á–µ—Ç –¥—Ä—É–≥–∞: {score}")
            print(f"üìö –ò–∑—É—á–µ–Ω–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤: {components_count}")

            if score > self.score:
                print("üéØ –í–∞—à –¥—Ä—É–≥ –∑–Ω–∞–µ—Ç –±–æ–ª—å—à–µ –≤–∞—Å! –ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ —É—á–∏—Ç—å—Å—è!")
            else:
                print("‚≠ê –í—ã –∑–Ω–∞–µ—Ç–µ –±–æ–ª—å—à–µ —Å–≤–æ–µ–≥–æ –¥—Ä—É–≥–∞! –¢–∞–∫ –¥–µ—Ä–∂–∞—Ç—å!")

            # "–ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º" –Ω–µ—Å–∫–æ–ª—å–∫–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
            available_components = [
                c for c in self.components.keys() if c not in self.components_learned
            ]
            if available_components:
                imported = random.sample(
                    available_components, min(2, len(available_components))
                )
                for comp in imported:
                    self.components_learned.add(comp)
                print(f"üìñ –í—ã —É–∑–Ω–∞–ª–∏ –æ –Ω–æ–≤—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞—Ö: {', '.join(imported)}")

        except ValueError:
            print("‚ùå –û—à–∏–±–∫–∞ –≤ –∫–æ–¥–µ –ø–µ—Ä–µ–¥–∞—á–∏!")

    def show_stats(self):
        """–ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏–≥—Ä–æ–∫–∞"""
        print("\n" + "=" * 50)
        print("üìä –í–ê–®–ê –°–¢–ê–¢–ò–°–¢–ò–ö–ê")
        print("=" * 50)
        print(f"üèÜ –û–±—â–∏–π —Å—á–µ—Ç: {self.score} –æ—á–∫–æ–≤")
        print(f"‚ùì –û—Ç–≤–µ—á–µ–Ω–æ –≤–æ–ø—Ä–æ—Å–æ–≤: {self.questions_answered}")
        print(
            f"üìö –ò–∑—É—á–µ–Ω–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤: {len(self.components_learned)}/{len(self.components)}"
        )

        if self.components_learned:
            print("\n‚úÖ –ò–∑—É—á–µ–Ω–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã:")
            for component in sorted(self.components_learned):
                print(f" ‚Ä¢ {component}")

        if self.transfer_code:
            print(f"\nüîó –ö–æ–¥ –ø–µ—Ä–µ–¥–∞—á–∏: {self.transfer_code}")
        else:
            print("\nüîó –ö–æ–¥ –ø–µ—Ä–µ–¥–∞—á–∏: –Ω–µ —Å–æ–∑–¥–∞–Ω")

        # –ü—Ä–æ–≥—Ä–µ—Å—Å –∏–∑—É—á–µ–Ω–∏—è
        progress = len(self.components_learned) / len(self.components) * 100
        print(f"\nüìà –ü—Ä–æ–≥—Ä–µ—Å—Å –∏–∑—É—á–µ–Ω–∏—è: {progress:.1f}%")

        if progress < 25:
            print("üéØ –°—Ç–∞—Ç—É—Å: –ù–∞—á–∏–Ω–∞—é—â–∏–π –ø–∏–ª–æ—Ç")
        elif progress < 50:
            print("üéØ –°—Ç–∞—Ç—É—Å: –õ—é–±–∏—Ç–µ–ª—å FPV")
        elif progress < 75:
            print("üéØ –°—Ç–∞—Ç—É—Å: –û–ø—ã—Ç–Ω—ã–π –ø–∏–ª–æ—Ç")
        else:
            print("üéØ –°—Ç–∞—Ç—É—Å: FPV –≠–∫—Å–ø–µ—Ä—Ç!")

        print("\n0 - –í–æ–∑–≤—Ä–∞—Ç –≤ –º–µ–Ω—é")
        cmd = input().strip()
        while cmd != "0":
            cmd = input().strip()


# –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≥—Ä–∞–º–º—ã
if __name__ == "__main__":
    print("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∏—Ä FPV –¥—Ä–æ–Ω–æ–≤!")
    print("–ò–∑—É—á–∞–π—Ç–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã, –ø—Ä–æ—Ö–æ–¥–∏—Ç–µ –≤–∏–∫—Ç–æ—Ä–∏–Ω—ã –∏ —Å—Ç–∞–Ω–æ–≤–∏—Ç–µ—Å—å —ç–∫—Å–ø–µ—Ä—Ç–æ–º!")
    game = FPVQuizGame()
    game.show_menu()
